package com.redhat.ceylon.compiler.java.test.structure.constructor;

public final class objectDeclContainingClassWithCtor_ {
    
    private objectDeclContainingClassWithCtor_() {
    }
    
    public static void objectDeclContainingClassWithCtor() {
        
        final class foo_ implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            private foo_() {
            }
            
            .java.lang.Object Bar$new$(foo_.Bar$Baz $name$) {
                return new Bar($name$);
            }
            
            class Bar$Baz {
                
                private Bar$Baz() {
                }
            }
            
            class Bar implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
                
                private Bar(foo_.Bar$Baz $name$) {
                }
                
                @.java.lang.Override
                public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                    return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.com.redhat.ceylon.compiler.java.test.structure.constructor.objectDeclContainingClassWithCtor_.class), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(foo_.class)), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(foo_.Bar.class));
                }
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.com.redhat.ceylon.compiler.java.test.structure.constructor.objectDeclContainingClassWithCtor_.class), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(foo_.class));
            }
        }
        final foo_ foo = new foo_();
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.structure.constructor.objectDeclContainingClassWithCtor_.objectDeclContainingClassWithCtor();
    }
}