package com.redhat.ceylon.compiler.java.test.statement.conditional;

class AssertExistsSequence implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    AssertExistsSequence() {
    }
    
    public final long mvar(final .ceylon.language.Sequential<? extends .ceylon.language.Integer> x) {
        final long y$2;
        .ceylon.language.Integer y$1 = null;
        if ((y$1 = x.getFromFirst(0L)) != null) {
            y$2 = y$1.longValue();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "exists y=x[0]"));
        }
        return y$2;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.statement.conditional.AssertExistsSequence();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.statement.conditional.AssertExistsSequence.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.conditional.AssertExistsSequence.class);
}